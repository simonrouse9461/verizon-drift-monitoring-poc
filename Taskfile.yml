version: '3'

vars:
  GCP_PROJECT: 'healthy-earth-389717'
  GCP_REGION: 'us-central1'
  GCP_DATAPROC_CLUSTER: 'verizon-drift-monitoring'
  SPARK_JOB_DOCKER_IMAGE: 'us-central1-docker.pkg.dev/healthy-earth-389717/verizon-drift-monitoring/spark-job-env'
  SPARK_JOB_CONFIG_FILE: 'spark_conf/dataproc/spark-defaults.conf'
  SPARK_JOB_PYTHON_MODULE: 'src'
  SPARK_JOB_DOTENV_FILE: '.env.dataproc'
  SPARK_JOB_DOTENV_FILE_LOCAL: '.env.remote'

includes:
  docker: taskfiles/DockerTasks.yml

tasks:
  deploy-dashboard:
    cmds:
      - python bootstrap_database.py {{.CLI_ARGS}}
      - python upload_dashboard.py {{.CLI_ARGS}}

  zip-src:
    cmds:
      - zip -r {{.SPARK_JOB_PYTHON_MODULE}}.zip {{.SPARK_JOB_PYTHON_MODULE}}/

  generate-spark-config:
    cmds:
      - jinja2 --format=yml {{.SPARK_JOB_CONFIG_FILE}}.j2 Taskfile.yml > {{.SPARK_JOB_CONFIG_FILE}}

  transform:
    env:
      DOTENV_PATH: '{{.SPARK_JOB_DOTENV_FILE_LOCAL}}'
    cmds:
      - python spark_transform.py {{.CLI_ARGS}}

  transform-docker:
    cmds:
      - docker run -w /mnt -v $(pwd):/mnt {{.SPARK_JOB_DOCKER_IMAGE}} 
        -e DOTENV_PATH={{.SPARK_JOB_DOTENV_FILE_LOCAL}}
        python spark_transform.py {{.CLI_ARGS}}

  transform-dataproc:
    cmds:
      - task: zip-src
      - task: generate-spark-config
      - gcloud dataproc --project={{.GCP_PROJECT}}
        jobs submit pyspark spark_transform.py
        --cluster={{.GCP_DATAPROC_CLUSTER}}
        --region={{.GCP_REGION}}
        --properties-file={{.SPARK_JOB_CONFIG_FILE}}
        --files={{.SPARK_JOB_DOTENV_FILE}}
        --py-files={{.SPARK_JOB_PYTHON_MODULE}}.zip
        -- {{.CLI_ARGS}}

  dataproc-test:
    cmds:
      - task: zip-src
      - task: generate-spark-config
      - gcloud dataproc --project={{.GCP_PROJECT}}
        jobs submit pyspark spark_test.py
        --cluster={{.GCP_DATAPROC_CLUSTER}}
        --region={{.GCP_REGION}}
        --properties-file={{.SPARK_JOB_CONFIG_FILE}}
        --files={{.SPARK_JOB_DOTENV_FILE}}
        --py-files={{.SPARK_JOB_PYTHON_MODULE}}.zip

  test:
    cmds:
      - echo {{.CLI_ARGS}}